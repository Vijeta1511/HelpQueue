{"version":3,"sources":["components/FooterComponent.jsx","components/HeaderComponent.jsx","services/TicketService.js","components/ListQueueTicketComponent.jsx","components/CreateTicketComponent.jsx","components/ListCompletedTicketsComponent.jsx","components/DevelopmentNavbarComponent.jsx","components/ListQueueTicketsDevelopmentComponent.jsx","components/DeploymentNavbarComponent.jsx","components/ListQueueTicketsDeploymentComponent.jsx","components/ListCompletedTicketsDevelopmentComponent.jsx","components/ListCompletedTicketsDeploymentComponent.jsx","components/UpdateTicketComponent.jsx","services/TechnicianService.js","components/AssignTicketComponent.jsx","components/AddSolutionTicketComponent.jsx","components/DeleteTicketComponent.jsx","components/UpdateTicketDevelopmentComponent.jsx","components/AssignTicketDevelopmentComponent.jsx","components/AddSolutionTicketDevelopmentComponent.jsx","components/DeleteTicketDevelopmentComponent.jsx","components/UpdateTicketDeploymentComponent.jsx","components/AssignTicketDeploymentComponent.jsx","components/AddSolutionTicketDeploymentComponent.jsx","components/DeleteTicketDeploymentComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","props","state","className","Component","HeaderComponent","createTicket","bind","developmentTickets","deploymentTickets","completedTickets","queueTickets","this","history","push","bg","variant","alt","src","width","height","Brand","href","data-testid","defaultActiveKey","Item","Link","onClick","title","id","withRouter","QUEUE_TICKETS_URL","axios","get","ticket","post","ticketId","put","delete","ListQueueTicketComponent","editTicket","assignTicket","resolveTicket","deleteTicket","TicketService","getQueueTickets","then","res","setState","data","style","map","author","description","department","asignee","time_created","CreateTicketComponent","changeTitleHandler","event","target","value","changeAuthorHandler","changeDescriptionHandler","changeDepartmentHandler","saveTicket","e","preventDefault","console","log","JSON","stringify","cancel","placeholder","name","onChange","selected","disabled","marginLeft","ListCompletedTicketsComponent","getCompletedTickets","solution","DevelopmentNavbarComponent","queueDevelopmentTickets","completedDevelopmentTickets","ListQueueTicketsDevelopmentComponent","developmentQueueTickets","getDevelopmentQueueTickets","DeploymentNavbarComponent","queueDeploymentTickets","completedDeploymentTickets","ListQueueTicketsDeploymentComponent","deploymentQueueTickets","getDeploymentQueueTickets","ListCompletedTicketsDevelopmentComponent","developmentCompletedTickets","getDevelopmentCompletedTickets","ListCompletedTicketsDeploymentComponent","deploymentCompletedTickets","getDeploymentCompletedTickets","UpdateTicketComponent","updateTicket","match","params","getTicketById","FETCH_TECHNICIANS_URL","AssignTicketComponent","changeTechnicianHandler","technicians","TechnicianService","getTechnicians","key","AddSolutionTicketComponent","changeSolutionHandler","type","DeleteTicketComponent","UpdateTicketDevelopmentComponent","AssignTicketDevelopmentComponent","AddSolutionTicketDevelopmentComponent","DeleteTicketDevelopmentComponent","UpdateTicketDeplopymentComponent","AssignTicketDeploymentComponent","AddSolutionTicketDeploymentComponent","DeleteTicketDeploymentComponent","App","path","exact","component","UpdateTicketDeploymentComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3b72b12.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            \n        }\n    }\n    render() {\n        return (\n            <div>\n                <footer className=\"footer fixed-bottom\">\n                    <span className=\"text-muted\">All Rights Reserved 2021 @VijetaAgrawal</span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default FooterComponent;","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport * as MyNavbar from \"react-bootstrap\";\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n        }\n        this.createTicket = this.createTicket.bind(this); \n        this.developmentTickets = this.developmentTickets.bind(this);\n        this.deploymentTickets = this.deploymentTickets.bind(this);\n        this.completedTickets = this.completedTickets.bind(this);\n        this.queueTickets = this.queueTickets.bind(this);\n    }\n    \n\n    createTicket(){\n        this.props.history.push('/create-ticket');\n    }\n\n    developmentTickets(){\n        this.props.history.push('/development-tickets');\n    }\n\n    deploymentTickets(){\n        this.props.history.push('/deployment-tickets');\n    }\n\n    completedTickets(){\n        this.props.history.push('/completed-tickets');\n    }\n\n    queueTickets(){\n        this.props.history.push('/queue-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                <MyNavbar.Navbar bg=\"dark\" variant=\"dark\">\n                <MyNavbar.Image\n                        alt=\"\"\n                        src=\"/barclays_logo.png\"\n                        width=\"200\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />\n                    <MyNavbar.Navbar.Brand href=\"/\" data-testid=\"Help-Queue\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Help Queue\n                    </MyNavbar.Navbar.Brand>\n                    <MyNavbar.Nav variant=\"pills\" defaultActiveKey=\"/\" className=\"nav-items\">\n                        <MyNavbar.Nav.Item>\n                            <MyNavbar.Nav.Link onClick={()=> this.queueTickets()} data-testid=\"Ticket-Queue\">\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                Ticket Queue\n                            </MyNavbar.Nav.Link>\n                        </MyNavbar.Nav.Item>\n                        <MyNavbar.Nav.Item>\n                            <MyNavbar.Nav.Link onClick={()=> this.completedTickets()} data-testid=\"Completed-Tickets\">\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                Completed Tickets&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            </MyNavbar.Nav.Link>\n                        </MyNavbar.Nav.Item>\n                        <MyNavbar.Nav.Item>\n                            <MyNavbar.NavDropdown title=\"Departments\" id=\"collasible-nav-dropdown\" data-testid=\"Departments\">\n                                <MyNavbar.NavDropdown.Item onClick={()=> this.developmentTickets()} data-testid=\"Development\">\n                                    Development</MyNavbar.NavDropdown.Item>\n                                <MyNavbar.NavDropdown.Item onClick={()=> this.deploymentTickets()} data-testid=\"Deployment\">\n                                    Deployment</MyNavbar.NavDropdown.Item>\n                            </MyNavbar.NavDropdown>\n                        </MyNavbar.Nav.Item>\n                        <MyNavbar.Nav.Item>\n                            <MyNavbar.Nav.Link onClick={()=> this.createTicket()} data-testid=\"Create-Ticket\">\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                Create Ticket\n                            </MyNavbar.Nav.Link>\n                        </MyNavbar.Nav.Item>\n                    </MyNavbar.Nav>\n                </MyNavbar.Navbar>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(HeaderComponent);","import axios from 'axios';\n\nconst QUEUE_TICKETS_URL = \"http://localhost:9001/api/v1/tickets\";\n\nclass TicketService {\n    getQueueTickets(){\n        return axios.get(QUEUE_TICKETS_URL);\n    }\n\n    getCompletedTickets(){\n        return axios.get(QUEUE_TICKETS_URL + '/complete');\n    }\n\n    getDevelopmentQueueTickets(){\n        return axios.get(QUEUE_TICKETS_URL + '/development');\n    }\n\n    getDeploymentQueueTickets(){\n        return axios.get(QUEUE_TICKETS_URL + '/deployment');\n    }\n\n    getDevelopmentCompletedTickets(){\n        return axios.get(QUEUE_TICKETS_URL + '/development/complete');\n    }\n\n    getDeploymentCompletedTickets(){\n        return axios.get(QUEUE_TICKETS_URL + '/deployment/complete');\n    }\n\n    createTicket(ticket){\n        return axios.post(QUEUE_TICKETS_URL + '/createTicket', ticket);\n    }\n\n    getTicketById(ticketId){\n        return axios.get(QUEUE_TICKETS_URL + '/' + ticketId);\n    }\n\n    updateTicket(ticketId, ticket){\n        return axios.put(QUEUE_TICKETS_URL + '/updateTicket/' + ticketId, ticket);\n    }\n\n    assignTicket(ticketId, ticket){\n        return axios.put(QUEUE_TICKETS_URL + '/assignTicket/' + ticketId, ticket);\n    }\n\n    resolveTicket(ticketId, ticket){\n        return axios.put(QUEUE_TICKETS_URL + '/completeTicket/' + ticketId, ticket);\n    }\n\n    deleteTicket(ticketId){\n        return axios.delete(QUEUE_TICKETS_URL + '/deleteTicket/' + ticketId);\n    }\n    \n}\n\nexport default new TicketService()","import React, { Component } from 'react';\nimport TicketService from '../services/TicketService';\nimport {withRouter} from 'react-router-dom';\n\nclass ListQueueTicketComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            queueTickets: []\n        }\n        this.editTicket = this.editTicket.bind(this);\n        this.assignTicket = this.assignTicket.bind(this);\n        this.resolveTicket = this.resolveTicket.bind(this);\n        this.deleteTicket = this.deleteTicket.bind(this);\n    }\n\n    editTicket(id){\n        this.props.history.push(`/update-ticket/${id}`);\n    }\n\n    assignTicket(id){\n        this.props.history.push(`/assign-ticket/${id}`);\n    }\n\n    resolveTicket(id){\n        this.props.history.push(`/solution-ticket/${id}`);\n    }\n\n    deleteTicket(id){\n        this.props.history.push(`/delete-ticket/${id}`);\n    }\n\n    componentDidMount() {\n        TicketService.getQueueTickets().then((res) => {\n            this.setState({queueTickets: res.data})\n        });\n    }\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\"><br />Ticket Queue</h2>\n                <br />\n                <div className=\"row\">\n                    <table className= \"table table-stripped table-bordered\" style={{width: '1250px'}}>\n                        \n                        <thead>\n                            <tr>\n                                <th> Title </th>\n                                <th> Author </th>\n                                <th> Description </th>\n                                <th> Department </th>\n                                <th> Assignee </th>\n                                <th> Time Created </th>\n                                <th> Actions </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.queueTickets.map(\n                                    queueTickets =>\n                                    <tr key = {queueTickets.id}>\n                                        <td> {queueTickets.title} </td>\n                                        <td> {queueTickets.author} </td>\n                                        <td> {queueTickets.description} </td>\n                                        <td> {queueTickets.department} </td>\n                                        <td> {queueTickets.asignee} </td>\n                                        <td> {queueTickets.time_created} </td>\n                                        <td> <button onClick= { () => this.editTicket(queueTickets.id)} \n                                        className = \"btn btn-success\"> Update </button>{' '}                                    \n                                        <button onClick= { () => this.assignTicket(queueTickets.id)} \n                                        className = \"btn btn-success\"> Assign </button>{' '}\n                                        <button onClick= { () => this.resolveTicket(queueTickets.id)} \n                                        className = \"btn btn-success\"> Resolve </button>{' '}\n                                        <button onClick= { () => this.deleteTicket(queueTickets.id)} \n                                        className = \"btn btn-danger\">Delete </button></td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ListQueueTicketComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\n\nclass CreateTicketComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            title: '',\n            author: '',\n            description: '',\n            department: ''\n        }\n\n        this.changeTitleHandler = this.changeTitleHandler.bind(this); \n        this.changeAuthorHandler = this.changeAuthorHandler.bind(this); \n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this); \n        this.changeDepartmentHandler = this.changeDepartmentHandler.bind(this); \n        this.saveTicket = this.saveTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTitleHandler=(event) =>{\n        this.setState({title: event.target.value});\n    }\n\n    changeAuthorHandler=(event) =>{\n        this.setState({author: event.target.value});\n    }\n\n    changeDescriptionHandler=(event) =>{\n        this.setState({description: event.target.value});\n    }\n\n    changeDepartmentHandler=(event) =>{\n        this.setState({department: event.target.value});\n    }\n\n    saveTicket = (e) => {\n        e.preventDefault();\n        let ticket = {title: this.state.title, author: this.state.author, \n            description: this.state.description, department: this.state.department}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.createTicket(ticket).then(res =>{\n            this.props.history.push('/queue-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/queue-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Create Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Title: </label>\n                                        <input placeholder=\"Title\" name=\"title\" className=\"form-control\"\n                                            value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Author: </label>\n                                        <input placeholder=\"Author\" name=\"author\" className=\"form-control\"\n                                            value={this.state.author} onChange={this.changeAuthorHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Description: </label>\n                                        <input placeholder=\"Description\" name=\"description\" className=\"form-control\"\n                                            value={this.state.description} onChange={this.changeDescriptionHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Department: </label>\n                                        <select className=\"form-control\" name=\"department\" \n                                            value={this.state.department} onChange={this.changeDepartmentHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            <option value=\"Development\">Development</option>\n                                            <option value=\"Deployment\">Deployment</option>\n                                        </select>\n                                        <br />\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.saveTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CreateTicketComponent);","import React, { Component } from 'react';\nimport TicketService from '../services/TicketService';\n\n\nclass ListCompletedTicketsComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            completedTickets: []\n        }\n    }\n\n    componentDidMount() {\n        TicketService.getCompletedTickets().then((res) => {\n            this.setState({completedTickets: res.data})\n        });\n    }\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\"><br />Completed Tickets</h2>\n                <br />\n                <div className=\"row\">\n                    <table className= \"table table-stripped table-bordered\">\n                        \n                        <thead>\n                            <tr>\n                                <th> Title </th>\n                                <th> Author </th>\n                                <th> Description </th>\n                                <th> Department </th>\n                                <th> Time Created </th>\n                                <th> Solution </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.completedTickets.map(\n                                    completedTickets =>\n                                    <tr key = {completedTickets.id}>\n                                        <td> {completedTickets.title} </td>\n                                        <td> {completedTickets.author} </td>\n                                        <td> {completedTickets.description} </td>\n                                        <td> {completedTickets.department} </td>\n                                        <td> {completedTickets.time_created} </td>\n                                        <td> {completedTickets.solution} </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ListCompletedTicketsComponent;","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport * as MyNavbar from \"react-bootstrap\";\n\nclass DevelopmentNavbarComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n        }\n        this.queueDevelopmentTickets = this.queueDevelopmentTickets.bind(this);\n        this.completedDevelopmentTickets = this.completedDevelopmentTickets.bind(this);\n    }\n    \n\n    queueDevelopmentTickets(){\n        this.props.history.push('/development-tickets');\n    }\n\n    completedDevelopmentTickets(){\n        this.props.history.push('/completed-development-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <br />\n                <MyNavbar.Button variant=\"outline-secondary\" onClick={()=> this.queueDevelopmentTickets()}>\n                Development Queue\n                </MyNavbar.Button>{' '}\n                <MyNavbar.Button variant=\"outline-secondary\" onClick={()=> this.completedDevelopmentTickets()}>\n                Completed Development Tickets\n                </MyNavbar.Button>{' '}\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DevelopmentNavbarComponent);","import React, { Component } from 'react';\nimport TicketService from '../services/TicketService';\nimport DevelopmentNavbarComponent from './DevelopmentNavbarComponent';\nimport {withRouter} from 'react-router-dom';\n\nclass ListQueueTicketsDevelopmentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            developmentQueueTickets: []\n        }\n        this.editTicket = this.editTicket.bind(this);\n        this.assignTicket = this.assignTicket.bind(this);\n        this.resolveTicket = this.resolveTicket.bind(this);\n        this.deleteTicket = this.deleteTicket.bind(this);\n    }\n\n    editTicket(id){\n        this.props.history.push(`/update-ticket-development/${id}`);\n    }\n\n    assignTicket(id){\n        this.props.history.push(`/assign-ticket-development/${id}`);\n    }\n\n    resolveTicket(id){\n        this.props.history.push(`/solution-ticket-development/${id}`);\n    }\n\n    deleteTicket(id){\n        this.props.history.push(`/delete-ticket-development/${id}`);\n    }\n\n    componentDidMount() {\n        TicketService.getDevelopmentQueueTickets().then((res) => {\n            this.setState({developmentQueueTickets: res.data})\n        });\n    }\n    render() {\n        return (\n            <div>\n                <DevelopmentNavbarComponent />\n                <h2 className=\"text-center\"><br />Development Queue</h2>\n                <br />\n                <div className=\"row\">\n                    <table className= \"table table-stripped table-bordered\">\n                        \n                        <thead>\n                            <tr>\n                                <th> Title </th>\n                                <th> Author </th>\n                                <th> Description </th>\n                                <th> Assignee </th>\n                                <th> Time Created </th>\n                                <th> Actions </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.developmentQueueTickets.map(\n                                    developmentQueueTickets =>\n                                    <tr key = {developmentQueueTickets.id}>\n                                        <td> {developmentQueueTickets.title} </td>\n                                        <td> {developmentQueueTickets.author} </td>\n                                        <td> {developmentQueueTickets.description} </td>\n                                        <td> {developmentQueueTickets.asignee} </td>\n                                        <td> {developmentQueueTickets.time_created} </td>\n                                        <td> <button onClick= { () => this.editTicket(developmentQueueTickets.id)} \n                                        className = \"btn btn-success\"> Update </button>{' '}\n                                        <button onClick= { () => this.assignTicket(developmentQueueTickets.id)} \n                                        className = \"btn btn-success\"> Assign </button>{' '}\n                                        <button onClick= { () => this.resolveTicket(developmentQueueTickets.id)} \n                                        className = \"btn btn-success\"> Resolve </button>{' '}\n                                        <button onClick= { () => this.deleteTicket(developmentQueueTickets.id)} \n                                        className = \"btn btn-danger\"> Delete </button></td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ListQueueTicketsDevelopmentComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport * as MyNavbar from \"react-bootstrap\";\n\nclass DeploymentNavbarComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n        }\n        this.queueDeploymentTickets = this.queueDeploymentTickets.bind(this);\n        this.completedDeploymentTickets = this.completedDeploymentTickets.bind(this);\n    }\n    \n\n    queueDeploymentTickets(){\n        this.props.history.push('/deployment-tickets');\n    }\n\n    completedDeploymentTickets(){\n        this.props.history.push('/completed-deployment-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                <br />\n                <MyNavbar.Button variant=\"outline-secondary\" onClick={()=> this.queueDeploymentTickets()}>\n                Development Queue\n                </MyNavbar.Button>{' '}\n                <MyNavbar.Button variant=\"outline-secondary\" onClick={()=> this.completedDeploymentTickets()}>\n                Completed Development Tickets\n                </MyNavbar.Button>{' '}\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DeploymentNavbarComponent);"," import React, { Component } from 'react';\n import TicketService from '../services/TicketService';\nimport DeploymentNavbarComponent from './DeploymentNavbarComponent';\nimport {withRouter} from 'react-router-dom';\n\nclass ListQueueTicketsDeploymentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            deploymentQueueTickets: []\n        }\n        this.editTicket = this.editTicket.bind(this);\n        this.assignTicket = this.assignTicket.bind(this);\n        this.resolveTicket = this.resolveTicket.bind(this);\n        this.deleteTicket = this.deleteTicket.bind(this);\n    }\n\n    editTicket(id){\n        this.props.history.push(`/update-ticket-deployment/${id}`);\n    }\n\n    assignTicket(id){\n        this.props.history.push(`/assign-ticket-deployment/${id}`);\n    }\n\n    resolveTicket(id){\n        this.props.history.push(`/solution-ticket-deployment/${id}`);\n    }\n\n    deleteTicket(id){\n        this.props.history.push(`/delete-ticket-deployment/${id}`);\n    }\n\n    componentDidMount() {\n        TicketService.getDeploymentQueueTickets().then((res) => {\n            this.setState({deploymentQueueTickets: res.data})\n        });\n    }\n    render() {\n        return (\n            <div>\n                <DeploymentNavbarComponent />\n                <h2 className=\"text-center\"><br />Deployment Queue</h2>\n                <br />\n                <div className=\"row\">\n                    <table className= \"table table-stripped table-bordered\">\n                        \n                        <thead>\n                            <tr>\n                                <th> Title </th>\n                                <th> Author </th>\n                                <th> Description </th>\n                                <th> Assignee </th>\n                                <th> Time Created </th>\n                                <th> Actions </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.deploymentQueueTickets.map(\n                                    deploymentQueueTickets =>\n                                    <tr key = {deploymentQueueTickets.id}>\n                                        <td> {deploymentQueueTickets.title} </td>\n                                        <td> {deploymentQueueTickets.author} </td>\n                                        <td> {deploymentQueueTickets.description} </td>\n                                        <td> {deploymentQueueTickets.asignee} </td>\n                                        <td> {deploymentQueueTickets.time_created} </td>\n                                        <td> <button onClick= { () => this.editTicket(deploymentQueueTickets.id)} \n                                        className = \"btn btn-success\"> Update </button>{' '}\n                                        <button onClick= { () => this.assignTicket(deploymentQueueTickets.id)} \n                                        className = \"btn btn-success\"> Assign </button>{' '}\n                                        <button onClick= { () => this.resolveTicket(deploymentQueueTickets.id)} \n                                        className = \"btn btn-success\"> Resolve </button>{' '}\n                                        <button onClick= { () => this.deleteTicket(deploymentQueueTickets.id)} \n                                        className = \"btn btn-danger\"> Delete </button></td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ListQueueTicketsDeploymentComponent);","import React, { Component } from 'react';\nimport TicketService from '../services/TicketService';\nimport DevelopmentNavbarComponent from './DevelopmentNavbarComponent';\n\nclass ListCompletedTicketsDevelopmentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            developmentCompletedTickets: []\n        }\n    }\n\n    componentDidMount() {\n        TicketService.getDevelopmentCompletedTickets().then((res) => {\n            this.setState({developmentCompletedTickets: res.data})\n        });\n    }\n    render() {\n        return (\n            <div>\n                <DevelopmentNavbarComponent />\n                <h2 className=\"text-center\"><br />Completed Development Tickets</h2>\n                <br />\n                <div className=\"row\">\n                    <table className= \"table table-stripped table-bordered\">\n                        \n                        <thead>\n                            <tr>\n                                <th> Title </th>\n                                <th> Author </th>\n                                <th> Description </th>\n                                <th> Time Created </th>\n                                <th> Solution </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.developmentCompletedTickets.map(\n                                    developmentCompletedTickets =>\n                                    <tr key = {developmentCompletedTickets.id}>\n                                        <td> {developmentCompletedTickets.title} </td>\n                                        <td> {developmentCompletedTickets.author} </td>\n                                        <td> {developmentCompletedTickets.description} </td>\n                                        <td> {developmentCompletedTickets.time_created} </td>\n                                        <td> {developmentCompletedTickets.solution} </td>                                       \n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ListCompletedTicketsDevelopmentComponent;","import React, { Component } from 'react';\nimport TicketService from '../services/TicketService';\nimport DeploymentNavbarComponent from './DeploymentNavbarComponent';\n\nclass ListCompletedTicketsDeploymentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            deploymentCompletedTickets: []\n        }\n    }\n\n    componentDidMount() {\n        TicketService.getDeploymentCompletedTickets().then((res) => {\n            this.setState({deploymentCompletedTickets: res.data})\n        });\n    }\n    render() {\n        return (\n            <div>\n                <DeploymentNavbarComponent />\n                <h2 className=\"text-center\"><br />Completed Deployment Tickets</h2>\n                <br />\n                <div className=\"row\">\n                    <table className= \"table table-stripped table-bordered\">\n                        \n                        <thead>\n                            <tr>\n                                <th> Title </th>\n                                <th> Author </th>\n                                <th> Description </th>\n                                <th> Time Created </th>\n                                <th> Solution </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.deploymentCompletedTickets.map(\n                                    deploymentCompletedTickets =>\n                                    <tr key = {deploymentCompletedTickets.id}>\n                                        <td> {deploymentCompletedTickets.title} </td>\n                                        <td> {deploymentCompletedTickets.author} </td>\n                                        <td> {deploymentCompletedTickets.description} </td>\n                                        <td> {deploymentCompletedTickets.time_created} </td>\n                                        <td> {deploymentCompletedTickets.solution} </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ListCompletedTicketsDeploymentComponent;","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass UpdateTicketComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            \n            id: this.props.match.params.id,\n            title: '',\n            author: '',\n            description: '',\n            department: ''\n        }\n\n        this.changeTitleHandler = this.changeTitleHandler.bind(this); \n        this.changeAuthorHandler = this.changeAuthorHandler.bind(this); \n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this); \n        this.changeDepartmentHandler = this.changeDepartmentHandler.bind(this); \n        this.updateTicket = this.updateTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTitleHandler=(event) =>{\n        this.setState({title: event.target.value});\n    }\n\n    changeAuthorHandler=(event) =>{\n        this.setState({author: event.target.value});\n    }\n\n    changeDescriptionHandler=(event) =>{\n        this.setState({description: event.target.value});\n    }\n\n    changeDepartmentHandler=(event) =>{\n        this.setState({department: event.target.value});\n    }\n\n    componentDidMount(){\n        TicketService.getTicketById(this.state.id).then( (res) => {\n            let ticket = res.data;\n            this.setState({title: ticket.title,\n                author: ticket.author,\n                description: ticket.description,\n                department: ticket.department\n            });\n            console.log('ticket => ' + JSON.stringify(ticket));\n        });\n    }\n\n    updateTicket = (e) => {\n        e.preventDefault();\n        let ticket = {title: this.state.title, author: this.state.author, \n            description: this.state.description, department: this.state.department}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.updateTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/queue-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/queue-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Update Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Title: </label>\n                                        <input placeholder=\"Title\" name=\"title\" className=\"form-control\"\n                                            value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Author: </label>\n                                        <input placeholder=\"Author\" name=\"author\" className=\"form-control\"\n                                            value={this.state.author} onChange={this.changeAuthorHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Description: </label>\n                                        <input placeholder=\"Description\" name=\"description\" className=\"form-control\"\n                                            value={this.state.description} onChange={this.changeDescriptionHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Department: </label>\n                                        <select className=\"form-control\" name=\"department\" \n                                            value={this.state.department} onChange={this.changeDepartmentHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            <option value=\"Development\">Development</option>\n                                            <option value=\"Deployment\">Deployment</option>\n                                        </select>\n                                        <br />\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.updateTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(UpdateTicketComponent);","import axios from 'axios';\n\nconst FETCH_TECHNICIANS_URL = 'http://localhost:9001/api/v1/tickets/assignTicket';\n\nclass TechnicianService {\n    getTechnicians(ticketId){\n        return axios.get(FETCH_TECHNICIANS_URL + '/' + ticketId);\n    }\n}\n\nexport default new TechnicianService()","import React, { Component } from 'react';\nimport TechnicianService from '../services/TechnicianService';\nimport TicketService from '../services/TicketService';\nimport {withRouter} from 'react-router-dom';\n\nclass AssignTicketComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            technicians: [],\n            asignee: ''\n        }\n        this.changeTechnicianHandler = this.changeTechnicianHandler.bind(this); \n        this.assignTicket = this.assignTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTechnicianHandler=(event) =>{\n        this.setState({asignee: event.target.value});\n    }\n\n    componentDidMount(){\n        console.log(this.state.id);\n        TechnicianService.getTechnicians(this.state.id).then( (res) => {\n            this.setState({technicians: res.data});\n        });\n\n        TicketService.getTicketById(this.state.id).then( (res) => {\n            let ticket = res.data;\n            this.setState({asignee: ticket.asignee});\n            console.log('ticket => ' + JSON.stringify(ticket));\n        });\n    }\n\n    assignTicket = (e) => {\n        e.preventDefault();\n        let ticket = {asignee: this.state.asignee}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.assignTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/queue-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/queue-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Assign Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Select Technician: </label>\n                                        <select name=\"asignee\" className=\"form-control\" \n                                        value={this.state.asignee} onChange={this.changeTechnicianHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            {this.state.technicians.map((e, key) => {\n                                                return <option key={key} value={e.value}>{e.name}</option>;\n                                            })}\n                                        </select>\n                                        <br />\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.assignTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AssignTicketComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass AddSolutionTicketComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            solution: ''\n        }\n\n        this.changeSolutionHandler = this.changeSolutionHandler.bind(this);\n        this.resolveTicket = this.resolveTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeSolutionHandler=(event) =>{\n        this.setState({solution: event.target.value});\n    }\n\n    resolveTicket = (e) => {\n        e.preventDefault();\n        let ticket = {solution: this.state.solution}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.resolveTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/queue-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/queue-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Resolve Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Solution: </label>\n                                        <input type=\"textarea\" placeholder=\"Add here\" name=\"solution\" className=\"form-control\"\n                                            value={this.state.solution} onChange={this.changeSolutionHandler}/>\n                                        <br />\n                                    </div>\n                                    <button data-testid=\"solution-submit\" className=\"btn btn-success\" onClick={this.resolveTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddSolutionTicketComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass DeleteTicketComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            solution: ''\n        }\n\n        this.deleteTicket = this.deleteTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    deleteTicket = (e) => {\n        e.preventDefault();\n        TicketService.deleteTicket(this.state.id).then( res => {\n            this.props.history.push('/queue-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/queue-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Delete Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group text-center\">\n                                        <label> Are you sure you want to delete this ticket? </label>\n                                    </div>\n                                    <button className=\"btn btn-danger\" onClick={this.deleteTicket} style={{marginLeft: \"150px\"}}>Delete</button>\n                                    <button className=\"btn btn-success\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DeleteTicketComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass UpdateTicketDevelopmentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            \n            id: this.props.match.params.id,\n            title: '',\n            author: '',\n            description: '',\n            department: ''\n        }\n\n        this.changeTitleHandler = this.changeTitleHandler.bind(this); \n        this.changeAuthorHandler = this.changeAuthorHandler.bind(this); \n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this); \n        this.changeDepartmentHandler = this.changeDepartmentHandler.bind(this); \n        this.updateTicket = this.updateTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTitleHandler=(event) =>{\n        this.setState({title: event.target.value});\n    }\n\n    changeAuthorHandler=(event) =>{\n        this.setState({author: event.target.value});\n    }\n\n    changeDescriptionHandler=(event) =>{\n        this.setState({description: event.target.value});\n    }\n\n    changeDepartmentHandler=(event) =>{\n        this.setState({department: event.target.value});\n    }\n\n    componentDidMount(){\n        TicketService.getTicketById(this.state.id).then( (res) => {\n            let ticket = res.data;\n            this.setState({title: ticket.title,\n                author: ticket.author,\n                description: ticket.description,\n                department: ticket.department\n            });\n            console.log('ticket => ' + JSON.stringify(ticket));\n        });\n    }\n\n    updateTicket = (e) => {\n        e.preventDefault();\n        let ticket = {title: this.state.title, author: this.state.author, \n            description: this.state.description, department: this.state.department}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.updateTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/development-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/development-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Update Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Title: </label>\n                                        <input placeholder=\"Title\" name=\"title\" className=\"form-control\"\n                                            value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Author: </label>\n                                        <input placeholder=\"Author\" name=\"author\" className=\"form-control\"\n                                            value={this.state.author} onChange={this.changeAuthorHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Description: </label>\n                                        <input placeholder=\"Description\" name=\"description\" className=\"form-control\"\n                                            value={this.state.description} onChange={this.changeDescriptionHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Department: </label>\n                                        <select className=\"form-control\" name=\"department\" \n                                            value={this.state.department} onChange={this.changeDepartmentHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            <option value=\"Development\">Development</option>\n                                            <option value=\"Deployment\">Deployment</option>\n                                        </select>\n                                        <br />\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.updateTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(UpdateTicketDevelopmentComponent);","import React, { Component } from 'react';\nimport TechnicianService from '../services/TechnicianService';\nimport TicketService from '../services/TicketService';\nimport {withRouter} from 'react-router-dom';\n\nclass AssignTicketDevelopmentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            technicians: [],\n            asignee: ''\n        }\n        this.changeTechnicianHandler = this.changeTechnicianHandler.bind(this); \n        this.assignTicket = this.assignTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTechnicianHandler=(event) =>{\n        this.setState({asignee: event.target.value});\n    }\n\n    componentDidMount(){\n        console.log(this.state.id);\n        TechnicianService.getTechnicians(this.state.id).then( (res) => {\n            this.setState({technicians: res.data});\n        });\n\n        TicketService.getTicketById(this.state.id).then( (res) => {\n            let ticket = res.data;\n            this.setState({asignee: ticket.asignee});\n            console.log('ticket => ' + JSON.stringify(ticket));\n        });\n    }\n\n    assignTicket = (e) => {\n        e.preventDefault();\n        let ticket = {asignee: this.state.asignee}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.assignTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/development-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/development-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Assign Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Select Technician: </label>\n                                        <select name=\"asignee\" className=\"form-control\" \n                                        value={this.state.asignee} onChange={this.changeTechnicianHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            {this.state.technicians.map((e, key) => {\n                                                return <option key={key} value={e.value}>{e.name}</option>;\n                                            })}\n                                        </select>\n                                        <br />\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.assignTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AssignTicketDevelopmentComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass AddSolutionTicketDevelopmentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            solution: ''\n        }\n\n        this.changeSolutionHandler = this.changeSolutionHandler.bind(this);\n        this.resolveTicket = this.resolveTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeSolutionHandler=(event) =>{\n        this.setState({solution: event.target.value});\n    }\n\n    resolveTicket = (e) => {\n        e.preventDefault();\n        let ticket = {solution: this.state.solution}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.resolveTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/development-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/development-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Resolve Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Solution: </label>\n                                        <input type=\"textarea\" placeholder=\"Add here\" name=\"solution\" className=\"form-control\"\n                                            value={this.state.solution} onChange={this.changeSolutionHandler}/>\n                                        <br />\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.resolveTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddSolutionTicketDevelopmentComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass DeleteTicketDevelopmentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            solution: ''\n        }\n\n        this.deleteTicket = this.deleteTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    deleteTicket = (e) => {\n        e.preventDefault();\n        TicketService.deleteTicket(this.state.id).then( res => {\n            this.props.history.push('/development-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/development-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Delete Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group text-center\">\n                                        <label> Are you sure you want to delete this ticket? </label>\n                                    </div>\n                                    <button className=\"btn btn-danger\" onClick={this.deleteTicket} style={{marginLeft: \"150px\"}}>Delete</button>\n                                    <button className=\"btn btn-success\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DeleteTicketDevelopmentComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass UpdateTicketDeplopymentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            \n            id: this.props.match.params.id,\n            title: '',\n            author: '',\n            description: '',\n            department: ''\n        }\n\n        this.changeTitleHandler = this.changeTitleHandler.bind(this); \n        this.changeAuthorHandler = this.changeAuthorHandler.bind(this); \n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this); \n        this.changeDepartmentHandler = this.changeDepartmentHandler.bind(this); \n        this.updateTicket = this.updateTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTitleHandler=(event) =>{\n        this.setState({title: event.target.value});\n    }\n\n    changeAuthorHandler=(event) =>{\n        this.setState({author: event.target.value});\n    }\n\n    changeDescriptionHandler=(event) =>{\n        this.setState({description: event.target.value});\n    }\n\n    changeDepartmentHandler=(event) =>{\n        this.setState({department: event.target.value});\n    }\n\n    componentDidMount(){\n        TicketService.getTicketById(this.state.id).then( (res) => {\n            let ticket = res.data;\n            this.setState({title: ticket.title,\n                author: ticket.author,\n                description: ticket.description,\n                department: ticket.department\n            });\n            console.log('ticket => ' + JSON.stringify(ticket));\n        });\n    }\n\n    updateTicket = (e) => {\n        e.preventDefault();\n        let ticket = {title: this.state.title, author: this.state.author, \n            description: this.state.description, department: this.state.department}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.updateTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/deployment-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/deployment-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Update Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Title: </label>\n                                        <input placeholder=\"Title\" name=\"title\" className=\"form-control\"\n                                            value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Author: </label>\n                                        <input placeholder=\"Author\" name=\"author\" className=\"form-control\"\n                                            value={this.state.author} onChange={this.changeAuthorHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Description: </label>\n                                        <input placeholder=\"Description\" name=\"description\" className=\"form-control\"\n                                            value={this.state.description} onChange={this.changeDescriptionHandler}/>\n                                    </div>\n\n                                    <div className = \"form-group\">\n                                        <label> <br />Department: </label>\n                                        <select className=\"form-control\" name=\"department\" \n                                            value={this.state.department} onChange={this.changeDepartmentHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            <option value=\"Development\">Development</option>\n                                            <option value=\"Deployment\">Deployment</option>\n                                        </select>\n                                        <br />\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.updateTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(UpdateTicketDeplopymentComponent);","import React, { Component } from 'react';\nimport TechnicianService from '../services/TechnicianService';\nimport TicketService from '../services/TicketService';\nimport {withRouter} from 'react-router-dom';\n\nclass AssignTicketDeploymentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            technicians: [],\n            asignee: ''\n        }\n        this.changeTechnicianHandler = this.changeTechnicianHandler.bind(this); \n        this.assignTicket = this.assignTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeTechnicianHandler=(event) =>{\n        this.setState({asignee: event.target.value});\n    }\n\n    componentDidMount(){\n        console.log(this.state.id);\n        TechnicianService.getTechnicians(this.state.id).then( (res) => {\n            this.setState({technicians: res.data});\n        });\n\n        TicketService.getTicketById(this.state.id).then( (res) => {\n            let ticket = res.data;\n            this.setState({asignee: ticket.asignee});\n            console.log('ticket => ' + JSON.stringify(ticket));\n        });\n    }\n\n    assignTicket = (e) => {\n        e.preventDefault();\n        let ticket = {asignee: this.state.asignee}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.assignTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/deployment-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/deployment-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Assign Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Select Technician: </label>\n                                        <select name=\"asignee\" className=\"form-control\" \n                                        value={this.state.asignee} onChange={this.changeTechnicianHandler}>\n                                            <option value=\"\" selected disabled>Please select</option>\n                                            {this.state.technicians.map((e, key) => {\n                                                return <option key={key} value={e.value}>{e.name}</option>;\n                                            })}\n                                        </select>\n                                        <br />\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.assignTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AssignTicketDeploymentComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass AddSolutionTicketDeploymentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            solution: ''\n        }\n\n        this.changeSolutionHandler = this.changeSolutionHandler.bind(this);\n        this.resolveTicket = this.resolveTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    changeSolutionHandler=(event) =>{\n        this.setState({solution: event.target.value});\n    }\n\n    resolveTicket = (e) => {\n        e.preventDefault();\n        let ticket = {solution: this.state.solution}\n        console.log('ticket => ' + JSON.stringify(ticket));\n\n        TicketService.resolveTicket(this.state.id, ticket).then( res => {\n            this.props.history.push('/deployment-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/deployment-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Resolve Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Solution: </label>\n                                        <input type=\"textarea\" placeholder=\"Add here\" name=\"solution\" className=\"form-control\"\n                                            value={this.state.solution} onChange={this.changeSolutionHandler}/>\n                                        <br />\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.resolveTicket} style={{marginLeft: \"150px\"}}>Submit</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddSolutionTicketDeploymentComponent);","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TicketService from '../services/TicketService';\n\nclass DeleteTicketDeploymentComponent extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            id: this.props.match.params.id,\n            solution: ''\n        }\n\n        this.deleteTicket = this.deleteTicket.bind(this); \n        this.cancel = this.cancel.bind(this);\n    }\n\n    deleteTicket = (e) => {\n        e.preventDefault();\n        TicketService.deleteTicket(this.state.id).then( res => {\n            this.props.history.push('/deployment-tickets');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/deployment-tickets');\n    }\n\n    render() {\n        return (\n            <div>\n                <br /><br />\n                <div className= \"container\">\n                    <div className= \"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\"><br />Delete Ticket</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group text-center\">\n                                        <label> Are you sure you want to delete this ticket? </label>\n                                    </div>\n                                    <button className=\"btn btn-danger\" onClick={this.deleteTicket} style={{marginLeft: \"150px\"}}>Delete</button>\n                                    <button className=\"btn btn-success\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DeleteTicketDeploymentComponent);","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport ListQueueTicketComponent from './components/ListQueueTicketComponent.jsx';\nimport CreateTicketComponent from './components/CreateTicketComponent';\nimport ListCompletedTicketsComponent from './components/ListCompletedTicketsComponent';\nimport ListQueueTicketsDevelopmentComponent from './components/ListQueueTicketsDevelopmentComponent';\nimport ListQueueTicketsDeploymentComponent from './components/ListQueueTicketsDeploymentComponent';\nimport ListCompletedTicketsDevelopmentComponent from './components/ListCompletedTicketsDevelopmentComponent';\nimport ListCompletedTicketsDeploymentComponent from './components/ListCompletedTicketsDeploymentComponent';\n\nimport UpdateTicketComponent from './components/UpdateTicketComponent';\nimport AssignTicketComponent from './components/AssignTicketComponent';\nimport AddSolutionTicketComponent from './components/AddSolutionTicketComponent';\nimport DeleteTicketComponent from './components/DeleteTicketComponent';\n\nimport UpdateTicketDevelopmentComponent from './components/UpdateTicketDevelopmentComponent';\nimport AssignTicketDevelopmentComponent from './components/AssignTicketDevelopmentComponent';\nimport AddSolutionTicketDevelopmentComponent from './components/AddSolutionTicketDevelopmentComponent';\nimport DeleteTicketDevelopmentComponent from './components/DeleteTicketDevelopmentComponent';\n\nimport UpdateTicketDeploymentComponent from './components/UpdateTicketDeploymentComponent';\nimport AssignTicketDeploymentComponent from './components/AssignTicketDeploymentComponent';\nimport AddSolutionTicketDeploymentComponent from './components/AddSolutionTicketDeploymentComponent';\nimport DeleteTicketDeploymentComponent from './components/DeleteTicketDeploymentComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n          <HeaderComponent />\n            <div className=\"container\">\n              <Switch>\n                <Route path = \"/\" exact component = {ListQueueTicketComponent}></Route>\n                <Route path = \"/queue-tickets\" exact component = {ListQueueTicketComponent}></Route>\n                <Route path = \"/create-ticket\" component = {CreateTicketComponent}></Route>\n                <Route path = \"/completed-tickets\" component = {ListCompletedTicketsComponent}></Route>\n                <Route path = \"/development-tickets\" component = {ListQueueTicketsDevelopmentComponent}></Route>\n                <Route path = \"/deployment-tickets\" component = {ListQueueTicketsDeploymentComponent}></Route>\n                <Route path = \"/completed-development-tickets\" component = {ListCompletedTicketsDevelopmentComponent}></Route>\n                <Route path = \"/completed-deployment-tickets\" component = {ListCompletedTicketsDeploymentComponent}></Route>\n                <Route path = \"/update-ticket/:id\" exact component = {UpdateTicketComponent}></Route>\n                <Route path = \"/assign-ticket/:id\" exact component = {AssignTicketComponent}></Route>\n                <Route path = \"/solution-ticket/:id\" exact component = {AddSolutionTicketComponent}></Route>\n                <Route path = \"/delete-ticket/:id\" exact component = {DeleteTicketComponent}></Route>\n\n                <Route path = \"/update-ticket-development/:id\" exact component = {UpdateTicketDevelopmentComponent}></Route>\n                <Route path = \"/assign-ticket-development/:id\" exact component = {AssignTicketDevelopmentComponent}></Route>\n                <Route path = \"/solution-ticket-development/:id\" exact component = {AddSolutionTicketDevelopmentComponent}></Route>\n                <Route path = \"/delete-ticket-development/:id\" exact component = {DeleteTicketDevelopmentComponent}></Route>\n                \n                <Route path = \"/update-ticket-deployment/:id\" exact component = {UpdateTicketDeploymentComponent}></Route>\n                <Route path = \"/assign-ticket-deployment/:id\" exact component = {AssignTicketDeploymentComponent}></Route>\n                <Route path = \"/solution-ticket-deployment/:id\" exact component = {AddSolutionTicketDeploymentComponent}></Route>\n                <Route path = \"/delete-ticket-deployment/:id\" exact component = {DeleteTicketDeploymentComponent}></Route>\n              </Switch>\n            </div>\n            <br /><br /><br /><br />\n          <FooterComponent />\n      </Router>\n    </div>\n     \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}